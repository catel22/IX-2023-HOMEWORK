Graphs:
 - A Graph data structure consists of a finite (and possibly mutable) set of vertices or nodes or points,
   together with a set of unordered pairs of these vertices for an undirected Graph or a set of
   ordered pairs for a directed Graph
 - A collection of nodes and connections

Uses: 
 - Social Networks
 - Location/Mapping
 - Routing Algorithms
 - Visual Hierarchy
 - File System Optimizations
 - Recommendation Engines

Essential Graph Terms:
 - Vertex: a Node 
 - Edge: connection between Nodes 
 - Weighted/Unweighted: values assigned to distances between vertices
 - Directed/Undirected: directions assigned to distances between vertices

Types of Graphs:
 - Undirected Graph
 - Directed Graph
 - Weighted Graph
 - Unweighted Graph 

Representing A Graph:
 - Adjacency Matrix
 - Adjacency List

Comparisons:

Adjacency Matrix:
 - Takes up more space (in sparse graphs)
 - Slower to iterate over all edges
 - Faster to lookup specific edges

Adjacency List:
 - Can take up less space (in sparse graphs)
 - Faster to iterate over all edges
 - Can be slower to lookup specific edges
