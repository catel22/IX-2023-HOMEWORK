Singly Linked List:

- A data structure that contains a head, tail and length property
- Linked lists consist of nodes, and each node has a value and a pointer to another node or null
- A skyscraper with no elevator 
- Singly because each node is only connected one directionally to the next node
- Good at insertion and deletion 

Comparisons with Arrays

Lists:
 - Do not have indices
 - Connected via nodes with a next pointer
 - Random access is not allowed

Arrays:
 - Indices in order
 - Insertion and deletion can be expensive
 - Can quickly be accessed at a specific index

Big-O Complexity (N is the length)

 - Insertion O(1)
 - Removal O(1) or O(N)
 - Searching O(N)
 - Access O(N)

Good alternative to arrays if insertion and deletion at the beginning are frequently required
The idea of a list data structure that consists of nodes is the foundation for other data structures like Stacks and Queues